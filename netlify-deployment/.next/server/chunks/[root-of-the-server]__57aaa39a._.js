module.exports=[32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},61724,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js"))},62646,(e,t,r)=>{},94180,e=>{"use strict";e.s(["handler",()=>N,"patchFetch",()=>D,"routeModule",()=>E,"serverHooks",()=>T,"workAsyncStorage",()=>C,"workUnitAsyncStorage",()=>A],94180);var t=e.i(86450),r=e.i(3907),a=e.i(91238),n=e.i(29346),o=e.i(6958),s=e.i(86279),i=e.i(17226),l=e.i(64633),d=e.i(5363),u=e.i(74855),p=e.i(48444),c=e.i(83529),x=e.i(82277),h=e.i(6927),R=e.i(93695);e.i(94429);var m=e.i(56006);e.s(["GET",()=>f,"POST",()=>w],38057);var v=e.i(45554);let g=new(e.i(29173)).PrismaClient;async function f(e){try{let{searchParams:t}=new URL(e.url),r=t.get("filter"),a=t.get("sortBy"),n={};"active"===r?n={completed:!1}:"completed"===r&&(n={completed:!0});let o=await g.todo.findMany({where:n});return o.sort((e,t)=>{if("priority"===a){let r={HIGH:1,MEDIUM:2,LOW:3};return r[e.priority]-r[t.priority]}return"dueDate"!==a?new Date(t.createdAt).getTime()-new Date(e.createdAt).getTime():e.dueDate||t.dueDate?e.dueDate?t.dueDate?new Date(e.dueDate).getTime()-new Date(t.dueDate).getTime():-1:1:0}),v.NextResponse.json(o)}catch(e){return console.error("Error fetching todos:",e),v.NextResponse.json({error:"Failed to fetch todos"},{status:500})}}async function w(e){try{let{title:t,priority:r="MEDIUM",dueDate:a}=await e.json();if(!t||"string"!=typeof t||""===t.trim())return v.NextResponse.json({error:"Title is required"},{status:400});let n=await g.todo.create({data:{title:t.trim(),priority:r,dueDate:a?new Date(a):null}});return v.NextResponse.json(n,{status:201})}catch(e){return console.error("Error creating todo:",e),v.NextResponse.json({error:"Failed to create todo"},{status:500})}}var y=e.i(38057);let E=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/todos/route",pathname:"/api/todos",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/Desktop/ToDo App/src/app/api/todos/route.ts",nextConfigOutput:"",userland:y}),{workAsyncStorage:C,workUnitAsyncStorage:A,serverHooks:T}=E;function D(){return(0,a.patchFetch)({workAsyncStorage:C,workUnitAsyncStorage:A})}async function N(e,t,a){var v;let g="/api/todos/route";g=g.replace(/\/index$/,"")||"/";let f=await E.prepare(e,t,{srcPage:g,multiZoneDraftMode:!1});if(!f)return t.statusCode=400,t.end("Bad Request"),null==a.waitUntil||a.waitUntil.call(a,Promise.resolve()),null;let{buildId:w,params:y,nextConfig:C,isDraftMode:A,prerenderManifest:T,routerServerContext:D,isOnDemandRevalidate:N,revalidateOnlyGenerated:b,resolvedPathname:j}=f,P=(0,s.normalizeAppPath)(g),q=!!(T.dynamicRoutes[P]||T.routes[j]);if(q&&!A){let e=!!T.routes[j],t=T.dynamicRoutes[P];if(t&&!1===t.fallback&&!e)throw new R.NoFallbackError}let O=null;!q||E.isDev||A||(O="/index"===(O=j)?"/":O);let k=!0===E.isDev||!q,_=q&&!k,H=e.method||"GET",M=(0,o.getTracer)(),S=M.getActiveScopeSpan(),U={params:y,prerenderManifest:T,renderOpts:{experimental:{cacheComponents:!!C.experimental.cacheComponents,authInterrupts:!!C.experimental.authInterrupts},supportsDynamicResponse:k,incrementalCache:(0,n.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(v=C.experimental)?void 0:v.cacheLife,isRevalidate:_,waitUntil:a.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,a)=>E.onRequestError(e,t,a,D)},sharedContext:{buildId:w}},I=new i.NodeNextRequest(e),F=new i.NodeNextResponse(t),$=l.NextRequestAdapter.fromNodeNextRequest(I,(0,l.signalFromNodeResponse)(t));try{let s=async r=>E.handle($,U).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let a=M.getRootSpanAttributes();if(!a)return;if(a.get("next.span_type")!==d.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${a.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let n=a.get("next.route");if(n){let e=`${H} ${n}`;r.setAttributes({"next.route":n,"http.route":n,"next.span_name":e}),r.updateName(e)}else r.updateName(`${H} ${e.url}`)}),i=async o=>{var i,l;let d=async({previousCacheEntry:r})=>{try{if(!(0,n.getRequestMeta)(e,"minimalMode")&&N&&b&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let i=await s(o);e.fetchMetrics=U.renderOpts.fetchMetrics;let l=U.renderOpts.pendingWaitUntil;l&&a.waitUntil&&(a.waitUntil(l),l=void 0);let d=U.renderOpts.collectedTags;if(!q)return await (0,p.sendResponse)(I,F,i,U.renderOpts.pendingWaitUntil),null;{let e=await i.blob(),t=(0,c.toNodeOutgoingHttpHeaders)(i.headers);d&&(t[h.NEXT_CACHE_TAGS_HEADER]=d),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==U.renderOpts.collectedRevalidate&&!(U.renderOpts.collectedRevalidate>=h.INFINITE_CACHE)&&U.renderOpts.collectedRevalidate,a=void 0===U.renderOpts.collectedExpire||U.renderOpts.collectedExpire>=h.INFINITE_CACHE?void 0:U.renderOpts.collectedExpire;return{value:{kind:m.CachedRouteKind.APP_ROUTE,status:i.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:a}}}}catch(t){throw(null==r?void 0:r.isStale)&&await E.onRequestError(e,t,{routerKind:"App Router",routePath:g,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:_,isOnDemandRevalidate:N})},D),t}},R=await E.handleResponse({req:e,nextConfig:C,cacheKey:O,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:T,isRoutePPREnabled:!1,isOnDemandRevalidate:N,revalidateOnlyGenerated:b,responseGenerator:d,waitUntil:a.waitUntil});if(!q)return null;if((null==R||null==(i=R.value)?void 0:i.kind)!==m.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==R||null==(l=R.value)?void 0:l.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,n.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",N?"REVALIDATED":R.isMiss?"MISS":R.isStale?"STALE":"HIT"),A&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let v=(0,c.fromNodeOutgoingHttpHeaders)(R.value.headers);return(0,n.getRequestMeta)(e,"minimalMode")&&q||v.delete(h.NEXT_CACHE_TAGS_HEADER),!R.cacheControl||t.getHeader("Cache-Control")||v.get("Cache-Control")||v.set("Cache-Control",(0,x.getCacheControlHeader)(R.cacheControl)),await (0,p.sendResponse)(I,F,new Response(R.value.body,{headers:v,status:R.value.status||200})),null};S?await i(S):await M.withPropagatedContext(e.headers,()=>M.trace(d.BaseServerSpan.handleRequest,{spanName:`${H} ${e.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":H,"http.target":e.url}},i))}catch(t){if(S||t instanceof R.NoFallbackError||await E.onRequestError(e,t,{routerKind:"App Router",routePath:P,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:_,isOnDemandRevalidate:N})}),q)throw t;return await (0,p.sendResponse)(I,F,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__57aaa39a._.js.map